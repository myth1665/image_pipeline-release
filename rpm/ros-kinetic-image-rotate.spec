Name:           ros-kinetic-image-rotate
Version:        1.12.23
Release:        0%{?dist}
Summary:        ROS image_rotate package

Group:          Development/Libraries
License:        BSD
URL:            http://ros.org/wiki/image_rotate
Source0:        %{name}-%{version}.tar.gz

Requires:       ros-kinetic-cv-bridge
Requires:       ros-kinetic-dynamic-reconfigure
Requires:       ros-kinetic-image-transport
Requires:       ros-kinetic-nodelet
Requires:       ros-kinetic-roscpp
Requires:       ros-kinetic-tf2
Requires:       ros-kinetic-tf2-geometry-msgs
Requires:       ros-kinetic-tf2-ros
BuildRequires:  ros-kinetic-catkin
BuildRequires:  ros-kinetic-cmake-modules
BuildRequires:  ros-kinetic-cv-bridge
BuildRequires:  ros-kinetic-dynamic-reconfigure
BuildRequires:  ros-kinetic-geometry-msgs
BuildRequires:  ros-kinetic-image-transport
BuildRequires:  ros-kinetic-nodelet
BuildRequires:  ros-kinetic-roscpp
BuildRequires:  ros-kinetic-rostest
BuildRequires:  ros-kinetic-tf2
BuildRequires:  ros-kinetic-tf2-geometry-msgs
BuildRequires:  ros-kinetic-tf2-ros

%description
Contains a node that rotates an image stream in a way that minimizes the angle
between a vector in some arbitrary frame and a vector in the camera frame. The
frame of the outgoing image is published by the node. This node is intended to
allow camera images to be visualized in an orientation that is more intuitive
than the hardware-constrained orientation of the physical camera. This is
particularly helpful, for example, to show images from the PR2's forearm cameras
with a consistent up direction, despite the fact that the forearms need to
rotate in arbitrary ways during manipulation. It is not recommended to use the
output from this node for further computation, as it interpolates the source
image, introduces black borders, and does not output a camera_info.

%prep
%setup -q

%build
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree that was dropped by catkin, and source it.  It will
# set things like CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/kinetic/setup.sh" ]; then . "/opt/ros/kinetic/setup.sh"; fi
mkdir -p obj-%{_target_platform} && cd obj-%{_target_platform}
%cmake .. \
        -UINCLUDE_INSTALL_DIR \
        -ULIB_INSTALL_DIR \
        -USYSCONF_INSTALL_DIR \
        -USHARE_INSTALL_PREFIX \
        -ULIB_SUFFIX \
        -DCMAKE_INSTALL_LIBDIR="lib" \
        -DCMAKE_INSTALL_PREFIX="/opt/ros/kinetic" \
        -DCMAKE_PREFIX_PATH="/opt/ros/kinetic" \
        -DSETUPTOOLS_DEB_LAYOUT=OFF \
        -DCATKIN_BUILD_BINARY_PACKAGE="1" \

make %{?_smp_mflags}

%install
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree that was dropped by catkin, and source it.  It will
# set things like CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/kinetic/setup.sh" ]; then . "/opt/ros/kinetic/setup.sh"; fi
cd obj-%{_target_platform}
make %{?_smp_mflags} install DESTDIR=%{buildroot}

%files
/opt/ros/kinetic

%changelog
* Thu May 10 2018 Vincent Rabaud <vincent.rabaud@gmail.com> - 1.12.23-0
- Autogenerated by Bloom

* Fri Dec 08 2017 Vincent Rabaud <vincent.rabaud@gmail.com> - 1.12.22-0
- Autogenerated by Bloom

* Sun Nov 05 2017 Vincent Rabaud <vincent.rabaud@gmail.com> - 1.12.21-0
- Autogenerated by Bloom

* Sun Apr 30 2017 Vincent Rabaud <vincent.rabaud@gmail.com> - 1.12.20-0
- Autogenerated by Bloom

* Sun Jul 24 2016 Vincent Rabaud <vincent.rabaud@gmail.com> - 1.12.19-0
- Autogenerated by Bloom

* Tue Jul 12 2016 Vincent Rabaud <vincent.rabaud@gmail.com> - 1.12.18-0
- Autogenerated by Bloom

* Mon Jul 11 2016 Vincent Rabaud <vincent.rabaud@gmail.com> - 1.12.17-0
- Autogenerated by Bloom

* Thu Apr 07 2016 Vincent Rabaud <vincent.rabaud@gmail.com> - 1.12.16-0
- Autogenerated by Bloom

